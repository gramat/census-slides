summary(lm(mpg ~ am, data=mtcars))
summary(lm(mpg ~ am + cyl, data=mtcars))
summary(lm(mpg ~ am + factor(cyl), data=mtcars))
?mtcars
summary(lm(mpg ~ am + disp, data=mtcars))
op <- par(mfrow = c(3,4))
for(i in 1:10){
plot(mtcars[,i+1], mtcars[,1],
xlab = colnames(mtcars)[i+1], ylab = colnames(mtcars)[1], col = mtcars$am+3,
sub = paste0("Cor(", colnames(mtcars)[i+1], ", mpg) = ",
round(cor(mtcars[i+1], mtcars[1]), 4),
"\nCor(", colnames(mtcars)[i+1], ", am", ") = ",
round(cor(mtcars[i+1], mtcars$am), 4)))
abline(lm(mtcars[,1] ~ mtcars[,i+1]), col="red")
}
par(op)
summary(lm(mpg ~ am + hp, data=mtcars))
summary(lm(mpg ~ am + drat, data=mtcars))
summary(lm(mpg ~ am + wt, data=mtcars))
summary(lm(mpg ~ am + qsec, data=mtcars))
summary(lm(mpg ~ am + vs, data=mtcars))
summary(lm(mpg ~ am + gear, data=mtcars))
summary(lm(mpg ~ am + gear, data=mtcars))
summary(lm(mpg ~ am + carb, data=mtcars))
summary(lm(mpg ~ am + disp, data=mtcars))
summary(lm(mpg ~ am + cyl + hp + qsec + vs + gear + carb))
summary(lm(mpg ~ am + cyl + hp + qsec + vs + gear + carb, data=mtcars))
summary(lm(mpg ~ am + cyl + hp + qsec + vs + gear + carb + wt, data=mtcars))
summary(lm(mpg ~ am + cyl + hp + qsec + vs + gear + carb, data=mtcars))
summary(lm(mpg ~ am + hp + qsec + vs + gear + carb, data=mtcars))
summary(lm(mpg ~ am + cyl + hp + vs + gear + carb, data=mtcars))
summary(lm(mpg ~ am + cyl + qsec + vs + gear + carb, data=mtcars))
summary(lm(mpg ~ am + cyl + hp + qsec + gear + carb, data=mtcars))
summary(lm(mpg ~ am + cyl + hp + qsec + vs + carb, data=mtcars))
summary(lm(mpg ~ am + cyl + hp + qsec + vs + gear, data=mtcars))
summary(lm(mpg ~ am + cyl + hp + vs + gear + carb, data=mtcars))
summary(lm(mpg ~ am + hp + vs + gear + carb, data=mtcars))
summary(lm(mpg ~ am + cyl + vs + gear + carb, data=mtcars))
summary(lm(mpg ~ am + cyl + hp + gear + carb, data=mtcars))
summary(lm(mpg ~ am + cyl + hp + vs + carb, data=mtcars))
summary(lm(mpg ~ am + cyl + hp + vs + gear, data=mtcars))
summary(lm(mpg ~ am + hp + vs + gear + carb, data=mtcars))
summary(lm(mpg ~ am + hp + gear + carb, data=mtcars))
summary(lm(mpg ~ am + hp + vs + gear + carb, data=mtcars))
summary(lm(mpg ~ am + hp + vs + gear + carb + wt, data=mtcars))
summary(lm(mpg ~ am + hp + vs + gear + carb + wt, data=mtcars))
summary(lm(mpg ~ am + cyl + hp + qsec + vs + gear + carb + wt, data=mtcars))
summary(lm(mpg ~ am + hp + qsec + gear + carb + wt, data=mtcars))
summary(lm(mpg ~ am + hp + qsec + carb + wt, data=mtcars))
summary(lm(mpg ~ am + hp + qsec + wt, data=mtcars))
summary(lm(mpg ~ am + hp + wt, data=mtcars))
summary(lm(mpg ~ am + qsec + wt, data=mtcars))
fitA <- lm(mpg ~ ., data=mtcars)
anova(step(fitA))
fitA <- lm(mpg ~ am + wt + qsec, data = mtcars)
summary(fitA)
fitA <- lm(mpg ~ ., data=mtcars)
anova(step(fitA))
summary(step(fitA))
fitA <- lm(mpg ~ am + wt + qsec, data = mtcars)
summary(fitA)
op <- par(mfrow = c(2,2))
plot(fitA)
par(op)
fitB <- lm(mpg ~ factor(am) + factor(cyl) + factor(vs) + factor(gear) + factor(carb) + disp + hp + drat + wt + qsec, data=mtcars)
anova(step(fitB))
fitB <- lm(mpg ~ factor(am) + factor(cyl) + wt + hp, data=mtcars)
summary(fitB)
op <- par(mfrow = c(2,2))
plot(fitB)
par(op)
fitB <- lm(mpg ~ factor(am) + cyl + wt + hp, data=mtcars)
summary(fitB)
op <- par(mfrow = c(2,2))
plot(fitB)
mpgCorVec <- vector(mode = 'numeric')
amCorVec <- vector(mode = 'numeric')
for(i in 1:10) mpgCorVec <- c(mpgCorVec, cor(mtcars[1], mtcars[i+1]))
for(i in 1:10) amCorVec <- c(amCorVec, cor(mtcars$am, mtcars[i+1]))
corTab <- rbind(mpgCorVec, amCorVec)
colnames(corTab) <- colnames(mtcars)[2:11]
corTab
fitC <- lm(mpg ~ factor(am) + factor(cyl) + disp + hp + wt, data=mtcars)
fitC <- lm(mpg ~ factor(am) + factor(cyl) + hp + wt, data=mtcars)
summary(fitC)
summary(fitB)
fitB <- lm(mpg ~ factor(am) + factor(cyl) + wt + hp, data=mtcars)
summary(fitB)
fitB <- lm(mpg ~ factor(am) + cyl + wt + hp, data=mtcars)
summary(fitB)
op <- par(mfrow = c(2,2))
plot(fitB)
par(op)
fitA <- lm(mpg ~ ., data=mtcars)
anova(step(fitA))
fitA <- lm(mpg ~ am + wt + qsec, data = mtcars)
summary(fitA)
summary(lm(qsec ~ wt + hp + cyl + disp + drat + vs + am + gear + carb))
summary(lm(qsec ~ wt + hp + cyl + disp + drat + vs + am + gear + carb, data=mtcars))
summary(lm(qsec ~ wt + cyl + disp + drat + vs + am + gear + carb, data=mtcars))
summary(lm(qsec ~ wt + cyl + disp + vs + am + gear + carb, data=mtcars))
summary(lm(qsec ~ wt + cyl + disp + vs + am + carb, data=mtcars))
summary(lm(qsec ~ wt + disp + vs + am + carb, data=mtcars))
summary(lm(qsec ~ wt + disp + vs + carb, data=mtcars))
summary(lm(qsec ~ wt + disp + factor(vs) + carb, data=mtcars))
summary(lm(qsec ~ wt + disp + vs + carb + cyl, data=mtcars))
summary(lm(qsec ~ wt + disp + vs + carb + gear, data=mtcars))
summary(lm(qsec ~ wt + disp + vs + carb + mpg, data=mtcars))
summary(lm(qsec ~ wt + disp + vs + carb + hp, data=mtcars))
summary(lm(qsec ~ wt + disp + vs + carb, data=mtcars))
summary(lm(qsec ~ wt + disp + vs + carb + drat, data=mtcars))
summary(lm(qsec ~ wt + disp + vs + carb, data=mtcars))
op <- par(mfrow = c(3,4))
for(i in 1:10){
plot(mtcars[,i+1], mtcars[,1],
xlab = colnames(mtcars)[i+1], ylab = colnames(mtcars)[1], col = mtcars$am+3,
sub = paste0("Cor(", colnames(mtcars)[i+1], ", mpg) = ",
round(cor(mtcars[i+1], mtcars[1]), 4),
"\nCor(", colnames(mtcars)[i+1], ", am", ") = ",
round(cor(mtcars[i+1], mtcars$am), 4)))
abline(lm(mtcars[,1] ~ mtcars[,i+1]), col="red")
}
par(op)
summary(lm(qsec ~ wt + disp + vs + carb, data=mtcars))
summary(lm(qsec ~ wt + disp:hp + vs + carb, data=mtcars))
summary(lm(qsec ~ wt + disp + hp + vs + carb, data=mtcars))
summary(lm(qsec ~ wt + disp + vs + carb, data=mtcars))
summary(lm(qsec ~ wt + disp:cyl + vs + carb, data=mtcars))
summary(lm(mpg ~ am + cyl + hp + qsec + vs + gear + carb + wt, data=mtcars))
pairs(mtcars)
op <- par(mfrow = c(3,4))
for(i in 1:10){
plot(mtcars[,i+1], mtcars[,1], main= paste0(colnames(mtcars)[1], " vs. ", colnames(mtcars)[i+1]),
xlab = colnames(mtcars)[i+1], ylab = colnames(mtcars)[1], col = mtcars$am+3,
sub = paste0("Cor(", colnames(mtcars)[i+1], ", mpg) = ",
round(cor(mtcars[i+1], mtcars[1]), 4),
"\nCor(", colnames(mtcars)[i+1], ", am", ") = ",
round(cor(mtcars[i+1], mtcars$am), 4)))
abline(lm(mtcars[,1] ~ mtcars[,i+1]), col="red")
}
par(op)
op <- par(mfrow = c(3,4))
for(i in 1:10){
plot(mtcars[,i+1], mtcars[,1], main= paste0(colnames(mtcars)[1], " vs. ", colnames(mtcars)[i+1]),
xlab = colnames(mtcars)[i+1], ylab = colnames(mtcars)[1], col = mtcars$am+3)
abline(lm(mtcars[,1] ~ mtcars[,i+1]), col="red")
}
par(op)
op <- par(mfrow = c(3,4), mar = c(2, 2, 2, 2) + 0.1)
for(i in 1:10){
plot(mtcars[,i+1], mtcars[,1], main= paste0(colnames(mtcars)[1], " vs. ", colnames(mtcars)[i+1]),
xlab = colnames(mtcars)[i+1], ylab = colnames(mtcars)[1], col = mtcars$am+3)
abline(lm(mtcars[,1] ~ mtcars[,i+1]), col="red")
}
par(op)
op <- par(mfrow = c(3,4), mar = c(1, 1, 1, 1) + 0.1)
for(i in 1:10){
plot(mtcars[,i+1], mtcars[,1], main= paste0(colnames(mtcars)[1], " vs. ", colnames(mtcars)[i+1]),
xlab = colnames(mtcars)[i+1], ylab = colnames(mtcars)[1], col = mtcars$am+3)
abline(lm(mtcars[,1] ~ mtcars[,i+1]), col="red")
}
par(op)
op <- par(mfrow = c(3,4), mar = c(2, 1, 1, 1) + 0.1)
for(i in 1:10){
plot(mtcars[,i+1], mtcars[,1], main= paste0(colnames(mtcars)[1], " vs. ", colnames(mtcars)[i+1]),
xlab = colnames(mtcars)[i+1], ylab = colnames(mtcars)[1], col = mtcars$am+3)
abline(lm(mtcars[,1] ~ mtcars[,i+1]), col="red")
}
par(op)
op <- par(mfrow = c(3,4), mar = c(4, 1, 1, 1) + 0.1)
for(i in 1:10){
plot(mtcars[,i+1], mtcars[,1], main= paste0(colnames(mtcars)[1], " vs. ", colnames(mtcars)[i+1]),
xlab = colnames(mtcars)[i+1], ylab = colnames(mtcars)[1], col = mtcars$am+3)
abline(lm(mtcars[,1] ~ mtcars[,i+1]), col="red")
}
par(op)
op <- par(mfrow = c(3,4), mar = c(4, 1, 1, 1) + 0.1, mgp = c(1, 1, 0))
for(i in 1:10){
plot(mtcars[,i+1], mtcars[,1], main= paste0(colnames(mtcars)[1], " vs. ", colnames(mtcars)[i+1]),
xlab = colnames(mtcars)[i+1], ylab = colnames(mtcars)[1], col = mtcars$am+3)
abline(lm(mtcars[,1] ~ mtcars[,i+1]), col="red")
}
par(op)
op <- par(mfrow = c(3,4), mar = c(4, 1, 1, 1) + 0.1, mgp = c(2, 1, 0))
for(i in 1:10){
plot(mtcars[,i+1], mtcars[,1], main= paste0(colnames(mtcars)[1], " vs. ", colnames(mtcars)[i+1]),
xlab = colnames(mtcars)[i+1], ylab = colnames(mtcars)[1], col = mtcars$am+3)
abline(lm(mtcars[,1] ~ mtcars[,i+1]), col="red")
}
par(op)
op <- par(mfrow = c(3,4), mar = c(3, 1, 1, 1) + 0.1, mgp = c(2, 1, 0))
for(i in 1:10){
plot(mtcars[,i+1], mtcars[,1], main= paste0(colnames(mtcars)[1], " vs. ", colnames(mtcars)[i+1]),
xlab = colnames(mtcars)[i+1], ylab = colnames(mtcars)[1], col = mtcars$am+3)
abline(lm(mtcars[,1] ~ mtcars[,i+1]), col="red")
}
par(op)
op <- par(mfrow = c(3,4), mar = c(3, 1, 1, 1) + 0.1, mgp = c(2, 2, 0))
for(i in 1:10){
plot(mtcars[,i+1], mtcars[,1], main= paste0(colnames(mtcars)[1], " vs. ", colnames(mtcars)[i+1]),
xlab = colnames(mtcars)[i+1], ylab = colnames(mtcars)[1], col = mtcars$am+3)
abline(lm(mtcars[,1] ~ mtcars[,i+1]), col="red")
}
par(op)
op <- par(mfrow = c(3,4), mar = c(3, 2, 1, 1) + 0.1, mgp = c(2, 2, 0))
for(i in 1:10){
plot(mtcars[,i+1], mtcars[,1], main= paste0(colnames(mtcars)[1], " vs. ", colnames(mtcars)[i+1]),
xlab = colnames(mtcars)[i+1], ylab = colnames(mtcars)[1], col = mtcars$am+3)
abline(lm(mtcars[,1] ~ mtcars[,i+1]), col="red")
}
par(op)
op <- par(mfrow = c(3,4), mar = c(3, 2, 1, 1) + 0.1, mgp = c(2, 1, 0))
for(i in 1:10){
plot(mtcars[,i+1], mtcars[,1], main= paste0(colnames(mtcars)[1], " vs. ", colnames(mtcars)[i+1]),
xlab = colnames(mtcars)[i+1], ylab = colnames(mtcars)[1], col = mtcars$am+3)
abline(lm(mtcars[,1] ~ mtcars[,i+1]), col="red")
}
par(op)
op <- par(mfrow = c(3,4), mar = c(3, 2, 1, 1) + 0.1, mgp = c(2, 2, 0))
for(i in 1:10){
plot(mtcars[,i+1], mtcars[,1], main= paste0(colnames(mtcars)[1], " vs. ", colnames(mtcars)[i+1]),
xlab = colnames(mtcars)[i+1], ylab = colnames(mtcars)[1], col = mtcars$am+3)
abline(lm(mtcars[,1] ~ mtcars[,i+1]), col="red")
}
par(op)
op <- par(mfrow = c(3,4), mar = c(3, 2, 1, 1) + 0.1, mgp = c(2, 1, 0))
for(i in 1:10){
plot(mtcars[,i+1], mtcars[,1], main= paste0(colnames(mtcars)[1], " vs. ", colnames(mtcars)[i+1]),
xlab = colnames(mtcars)[i+1], ylab = colnames(mtcars)[1], col = mtcars$am+3)
abline(lm(mtcars[,1] ~ mtcars[,i+1]), col="red")
}
par(op)
op <- par(mfrow = c(3,4), mar = c(3, 3, 1, 1) + 0.1, mgp = c(2, 1, 0))
for(i in 1:10){
plot(mtcars[,i+1], mtcars[,1], main= paste0(colnames(mtcars)[1], " vs. ", colnames(mtcars)[i+1]),
xlab = colnames(mtcars)[i+1], ylab = colnames(mtcars)[1], col = mtcars$am+3)
abline(lm(mtcars[,1] ~ mtcars[,i+1]), col="red")
}
par(op)
?mtcars
?mtcars$format
?mtcars$Format
?mtcars@Format
summary(lm(mpg ~ am + wt + cyl + carb + hp, data=mtcars))
library(swirl)
swirl()
all <- lm(fertility ~ ., data = swiss)
all <- lm(Fertility ~ ., data = swiss)
summary(all)
lm(Fertility ~ Agriculture, data = swiss)
summary(lm(Fertility ~ Agriculture, data = swiss))
summary(lm(Fertility ~ Agriculture, data = swiss))
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- sum(swiss$Examination, swiss$Catholic)
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, swiss)
all - efit
all$coefficients - efit$coefficients
library(swift)
library(swirl)
swirl()
6
dim(InsectSprays)
head(InsectSprays, 15)
sB
summary(InsectSprays[,2])
sapply(class(InsectSprays))
sapply(InsectSprays, FUN=class)
sapply(InsectSprays, class)
fit <- lm(count ~ spray, data = InsectSprays)
summary(fit)
summary(fit)$coef
store <- summary(fit)$coef[,1]
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count ~ spray -1)
nfit <- lm(count ~ spray -1, data = InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(InsectSprays$count ~ spray2)
summary(fit2)$coef
mean(sC)
(fit$coef[2] - fit$coef[3]) / 1.6011
quit()
install.packages(slidify)
install.packages("slidify")
library(swirl)
Graden
swirl()
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year, data = hunger)
summary(fit)$coef
lmF <- lm(Numeric ~ Year, data = hunger[hunger$Sex == "Female"])
lmF <- lm(Numeric ~ Year, data = hunger[hunger$Sex == "Female",])
lmF <- lm(Numeric[Sex == "Female"] ~ Year[Sex == "Female"], data = hunger)
lmM <- lm(Numeric[Sex == "Male"] ~ Year[Sex == "Male"], data = hunger)
lmBoth <- lm(Numeric ~ Year + Sex, data = hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex * Year, data = hunger)
summary(lmInter)
fit <- lm(y ~x, out2)
plot(fit, which=1)
fitno <- lm(y ~ x, out2[-1,])
plot(fitno, which=1)
coef(fit) - coef(fitno)
head(dfbeta(fit))
resno <- out2[1,"y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- sqrt(sum(resid(fit)^2)/fit$df.residual)
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit, which=2)
sigma1 <- sqrt(sum(resid(fitno)^2)/fitno$df.residual)
resid(fit)[1]/ (sigma1 * sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out2)
sum(dy^2)/2*sigma^2
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
?datasets
library(help = "datasets")
library(swirl)
swirl()
rgp()
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility ~ ., data=swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ . - Examination, data=swiss)
vif(mdl2)
library(swirl)
swirl
swirl()
simbias()
xlc <- simbias()
xlc <- simbias()
info()
xlc <- simbias()
bye()
swirl()
xlc <- simbias()
bye()
library(swirl)
swirl()
xlc <- simbias()
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, data=swiss)
fit3 <- lm(Fertility ~ Agriculture + Education + Examination, data=swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3) / 43
n <- (deviance(fit1) - deviance(fit3)) / (fit1$df.residual - fit3$df.residual)
n/d
pf(n/d, 2, 43, lower.tail = FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
library(swirl)
swirl()
ravenData
mdl <- glm(ravenWinNum ~ ravetScore, family = "binomial", data = ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, family = "binomial", data = ravenData)
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000, 50))
nxt()
head(hits)
class(hits[, 'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
confint(mdl, 'date')
exp(confint(mdl, 'date'))
which.max(hit[,'visit'])
which.max(hits[,'visit'])
which.max(hits[,'visits'])
hits[704,]
lambda <- mdl$fitted.values[704]
qpois(.95, lambda)
mdl2 <- glm(simplystat ~ date, family = 'poisson', offset = log(visit+1), data = hits)
mdl2 <- glm(simplystats ~ date, family = 'poisson', offset = log(visit+1), data = hits)
mdl2 <- glm(simplystats ~ date, family = 'poisson', offset = log(visits+1), data = hits)
qpois(.95, mdl2$fitted.values[704])
install.packages("caret")
library(caret)
help(createDataPartition)
library(shiny)
runExample("01_hello")
runExample("02_text")
runExample("02_text")
runExample("03_reactivity")
setwd("Документы/coursera/data-science/data_prod/dpproject/")
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shinyapps)
install.packages("shinyapps")
install.packages("shinyapps")
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='gramat', token='5C88C7F9E6876A764F7E2AED3470C691', secret='vrqsRt2sQ27Yjnln9lM7XMoKC1IpbZ5K6t1hAnYY')
library(shinyapps)
shinyapps::deployApp('path/to/your/app')
library(shinyapps)
getwd()
deployApp()
library(help = pyramid)
library(help = pyramid)
library(devtools)
library(slidify)
setwd("..")
author("dppres")
slidify("index.html")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
getwd()
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
runDeck()
runDeck()
runDeck()
slidify("index.Rmd")
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
??slidifyUI
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
runDeck()
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
